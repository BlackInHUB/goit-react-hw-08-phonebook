{"version":3,"file":"static/js/903.91c782bd.chunk.js","mappings":"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","sources":["hooks/useForm.js","redux/filter/filterSelectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","redux/contacts/contactsSelectors.js","components/Contacts/ContactAddForm/ContactsAddForm.styled.js","components/Contacts/ContactAddForm/ContactsAddForm.jsx","components/Contacts/ContactsList/ContactsList.styled.js","components/Contacts/ContactsList/ContactsListItem.jsx","components/Contacts/ContactsList/ContactsList.jsx","components/Contacts/Contacts.jsx","utils/notify.js","pages/ContactsPage.jsx"],"sourcesContent":["import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = e => {\n    const { value, type, name, checked } = e.target;\n    const newValue = type === 'checkbox' ? checked : value;\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","export const selectFilter = ({ filter }) => filter.value;\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  padding: ${p => p.theme.space[3]}px;\n  outline: none;\n  border: none;\n  border-bottom: ${p => p.theme.borders.bold} ${p => p.theme.colors.secondary};\n`;\n","import { useDispatch, useSelector } from \"react-redux\"\nimport { selectFilter } from \"redux/filter/filterSelectors\"\nimport { setFilter } from \"redux/filter/filterSlice\"\nimport { FilterInput } from \"./Filter.styled\"\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n        const handleChange = (e) => {\n        const { value } = e.target;\n        const action = setFilter(value);\n        dispatch(action)\n}\n\n    return <FilterInput type=\"text\" value={filter} onChange={handleChange} placeholder=\"Кого шукаємо?\" />\n}","export const selectContacts = ({ contacts }) => contacts.items;\n\nexport const selectIsLoading = ({ contacts }) => contacts.loading;\n\nexport const selectFilteredContacts = ({ filter, contacts }) => {\n  if (!filter.value) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.value.toLowerCase();\n  const filteredContacts = contacts.items.filter(item =>\n    item.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return filteredContacts;\n};\n","import styled from 'styled-components';\nimport { BsPlusSquare } from 'react-icons/bs';\nimport { MdClose } from 'react-icons/md';\n\nexport const OpenFormBtn = styled.button`\n  display: flex;\n  align-items: center;\n  font-family: inherit;\n  font-size: ${p => p.theme.fontSizes.link};\n  color: ${p => p.theme.colors.primary};\n  outline: none;\n  border: none;\n  cursor: pointer;\n  background-color: transparent;\n  padding: 0;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const OpenFormIcon = styled(BsPlusSquare)`\n  fill: ${p => p.theme.colors.primary};\n  margin-right: ${p => p.theme.space[3]}px;\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  width: 500px;\n  padding: ${p => p.theme.space[4]}px;\n  flex-direction: column;\n  border: ${p => p.theme.borders.bold} ${p => p.theme.colors.primary};\n  box-shadow: 0px 10px 17px -3px ${p => p.theme.colors.grey};\n  border-radius: ${p => p.theme.radii.normal};\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const FormLabel = styled.label`\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const FormInput = styled.input`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[4]}px;\n  outline: none;\n  border: ${p => p.theme.borders.bold} ${p => p.theme.colors.primary};\n  border-radius: ${p => p.theme.radii.normal};\n  transition: box-shadow 250ms linear;\n\n  &:focus {\n    box-shadow: 0px 10px 10px -3px ${p => p.theme.colors.grey};\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  width: fit-content;\n  font-family: inherit;\n  outline: none;\n  margin: 0 auto;\n  font-size: inherit;\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[5]}px;\n  color: ${p => p.theme.colors.primary};\n  border: ${p => p.theme.borders.bold} ${p => p.theme.colors.primary};\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.normal};\n  transition: 250ms linear;\n\n  &:hover,\n  :focus {\n    color: ${p => p.theme.colors.white};\n    box-shadow: inset 6.5em 0 0 0 ${p => p.theme.colors.primary};\n  }\n\n  &:active {\n    color: ${p => p.theme.colors.primary};\n    background-color: ${p => p.theme.colors.white};\n    box-shadow: 0px 0px 5px 1px ${p => p.theme.colors.primary};\n  }\n`;\n\nexport const FormCloseBtn = styled.button`\n  outline: none;\n  border: none;\n  background-color: transparent;\n  padding: 0;\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  cursor: pointer;\n`;\n\nexport const FormCloseIcon = styled(MdClose)`\n  fill: ${p => p.theme.colors.primary};\n  transition: 250ms linear;\n\n  &:hover,\n  :focus {\n    fill: ${p => p.theme.colors.red};\n  }\n`;\n","import useForm from \"hooks/useForm\";\nimport { nanoid } from \"nanoid\";\nimport { useMemo } from \"react\";\nimport { Box } from \"utils/Box\";\nimport { Form, FormInput, FormLabel, SubmitBtn, OpenFormBtn, OpenFormIcon, FormCloseBtn, FormCloseIcon } from \"./ContactsAddForm.styled\";\n\nconst initialState = {\n    name: '',\n    number: '',\n    isFormOpen: false\n}\n\nexport const ContactsAddForm = ({ onSubmit }) => {\n    const { state, setState, handleSubmit, handleChange } = useForm({initialState, onSubmit})\n    const { name, number, isFormOpen } = state;\n\n    const nameId = useMemo(() => nanoid(), [])\n    const numberId = useMemo(() => nanoid(), [])\n\n    const formOpenToggle = () => {\n        setState(prevState => {\n            return {...prevState, isFormOpen: !prevState.isFormOpen}\n        })\n    }\n\n    return (\n        <Box>\n            {!isFormOpen && <OpenFormBtn onClick={formOpenToggle}><OpenFormIcon size=\"30\" />Додати контакт</OpenFormBtn>}\n            {isFormOpen &&\n                <Form onSubmit={handleSubmit}>\n                    <FormCloseBtn onClick={formOpenToggle}><FormCloseIcon size=\"25\"/></FormCloseBtn>\n                    <FormLabel htmlFor={nameId}>Ім'я контакту:</FormLabel>\n                        <FormInput id={nameId} name=\"name\" type=\"text\" value={name} onChange={handleChange} placeholder=\"Введіть ім'я\" required />\n                    <FormLabel htmlFor={numberId}>Номер телефону:</FormLabel>\n                        <FormInput id={numberId} name=\"number\" type=\"text\" value={number} onChange={handleChange} placeholder=\"Введіть номер\" required />\n                    <SubmitBtn>Додати</SubmitBtn>\n                </Form>}\n        </Box>\n    )\n}","import styled from 'styled-components';\nimport { RiDeleteBin2Line } from 'react-icons/ri';\n\nexport const List = styled.ul`\n  padding: ${p => p.theme.space[5]}px;\n  width: 100%;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: ${p => p.theme.borders.normal} ${p => p.theme.colors.secondary};\n\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const ListItemName = styled.span``;\n\nexport const ListItemNumber = styled.span``;\n\nexport const DeleteBtn = styled.button`\n  width: fit-content;\n  padding: 0;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const DeleteIcon = styled(RiDeleteBin2Line)`\n  transition: 250ms linear;\n\n  &:hover,\n  :focus {\n    fill: ${p => p.theme.colors.red};\n  }\n`;\n","import { ListItem, DeleteBtn, ListItemName, ListItemNumber, DeleteIcon } from \"./ContactsList.styled\";\n\nexport const ContactsListItem = ({ contact, onDelete }) => {\n    return (\n        <ListItem>\n            <ListItemName>{contact.name}</ListItemName>\n            <ListItemNumber>{contact.number}</ListItemNumber>\n            <DeleteBtn onClick={() => onDelete(contact.id)}><DeleteIcon size=\"20\"/></DeleteBtn>\n        </ListItem>\n    )\n}","import { List } from \"./ContactsList.styled\";\nimport { ContactsListItem } from \"./ContactsListItem\";\n\nexport const ContactsList = ({ contacts, onDelete }) => {\n    return (\n        <List>\n            {contacts.map(contact => <ContactsListItem key={contact.id} contact={contact} onDelete={onDelete} />)}\n        </List>\n    )\n}","import { Filter } from \"components/Filter/Filter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilteredContacts } from \"redux/contacts/contactsSelectors\";\nimport { addContact, deleteContact } from \"redux/contacts/contactsOperations\";\nimport { Box } from \"utils/Box\";\nimport { ContactsAddForm } from \"./ContactAddForm/ContactsAddForm\";\nimport { ContactsList } from \"./ContactsList/ContactsList\";\nimport { notifyWarning, notifySuccess } from \"utils/notify\";\n\nexport const Contacts = () => {\n    const contacts = useSelector(selectFilteredContacts)\n    const filteredContacts = useSelector(selectFilteredContacts);\n    const dispatch = useDispatch();\n    \n    const onDelete = (id) => {\n        const action = deleteContact(id);\n        dispatch(action);\n    }\n\n    const handleSubmit = (newContact) => {\n        for (const contact of contacts) {\n            if (contact.name === newContact.name) {\n                return notifyWarning(contact.name)\n            }\n        }\n\n        const action = addContact(newContact);\n        dispatch(action)\n        notifySuccess(newContact.name)\n    }\n\n    return (\n        <Box width=\"500px\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            <ContactsAddForm onSubmit={handleSubmit} />\n            <Filter />\n            <ContactsList contacts={filteredContacts} onDelete={onDelete} />\n        </Box>\n    )\n}","import { toast } from 'react-toastify';\n\nexport const notifyWarning = username =>\n  toast.warning(`Контакт ${username} вже існує!`, {\n    position: 'top-center',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n\nexport const notifySuccess = username =>\n  toast.success(`${username} додано!`, {\n    position: 'top-center',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\"\nimport {fetchContacts } from \"redux/contacts/contactsOperations\";\n\nimport { Contacts } from \"components/Contacts/Contacts\";\nimport { Box } from \"utils/Box\";\n\nconst ContactsPage = () => {\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n    const action = fetchContacts();\n    dispatch(action)\n    }, [dispatch])\n    \n    return (\n        <Box display=\"flex\" justifyContent=\"center\">\n            <Contacts />\n        </Box>\n    )\n}\n\nexport default ContactsPage;"],"names":["initialState","onSubmit","useState","state","setState","handleChange","e","target","value","type","name","checked","newValue","prevState","handleSubmit","preventDefault","selectFilter","filter","FilterInput","styled","p","theme","space","borders","bold","colors","secondary","Filter","dispatch","useDispatch","useSelector","onChange","action","setFilter","placeholder","selectFilteredContacts","contacts","items","normalizedFilter","toLowerCase","item","includes","OpenFormBtn","fontSizes","link","primary","OpenFormIcon","BsPlusSquare","Form","grey","radii","normal","FormLabel","FormInput","SubmitBtn","white","FormCloseBtn","FormCloseIcon","MdClose","red","number","isFormOpen","ContactsAddForm","useForm","nameId","useMemo","nanoid","numberId","formOpenToggle","Box","onClick","size","htmlFor","id","required","List","ListItem","ListItemName","ListItemNumber","DeleteBtn","DeleteIcon","RiDeleteBin2Line","ContactsListItem","contact","onDelete","ContactsList","map","Contacts","filteredContacts","width","display","flexDirection","alignItems","newContact","username","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","addContact","notifySuccess","deleteContact","useEffect","fetchContacts","justifyContent"],"sourceRoot":""}