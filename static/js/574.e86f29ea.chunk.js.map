{"version":3,"file":"static/js/574.e86f29ea.chunk.js","mappings":"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","sources":["hooks/useForm.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = e => {\n    const { value, type, name, checked } = e.target;\n    const newValue = type === 'checkbox' ? checked : value;\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  width: 500px;\n  padding: ${p => p.theme.space[4]}px;\n  flex-direction: column;\n  border: ${p => p.theme.borders.bold} ${p => p.theme.colors.primary};\n  box-shadow: 0px 10px 17px -3px ${p => p.theme.colors.grey};\n  border-radius: ${p => p.theme.radii.normal};\n`;\n\nexport const FormLabel = styled.label`\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const FormInput = styled.input`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[4]}px;\n  outline: none;\n  border: ${p => p.theme.borders.bold} ${p => p.theme.colors.primary};\n  border-radius: ${p => p.theme.radii.normal};\n  transition: box-shadow 250ms linear;\n\n  &:focus {\n    box-shadow: 0px 10px 10px -3px ${p => p.theme.colors.grey};\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  width: fit-content;\n  font-family: inherit;\n  outline: none;\n  margin: 0 auto;\n  font-size: inherit;\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[5]}px;\n  color: ${p => p.theme.colors.primary};\n  border: ${p => p.theme.borders.bold} ${p => p.theme.colors.primary};\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.normal};\n  transition: 250ms linear;\n\n  &:hover,\n  :focus {\n    color: ${p => p.theme.colors.white};\n    box-shadow: inset 10em 0 0 0 ${p => p.theme.colors.primary};\n  }\n\n  &:active {\n    color: ${p => p.theme.colors.primary};\n    background-color: ${p => p.theme.colors.white};\n    box-shadow: 0px 0px 5px 1px ${p => p.theme.colors.primary};\n  }\n`;\n","import useForm from \"hooks/useForm\";\nimport { nanoid } from \"nanoid\";\nimport { useMemo } from \"react\";\nimport { Form, FormLabel, FormInput, SubmitBtn } from \"./RegisterForm.styled\";\n\nconst initialState = {\n    name: '',\n    email: '',\n    password: '',\n}\n\nexport const RegisterForm = ({ onSubmit }) => {\n    const { state, handleChange, handleSubmit } = useForm({ initialState, onSubmit })\n    const { name, email, password } = state;\n\n    const nameId = useMemo(() => nanoid(), []);\n    const emailId = useMemo(() => nanoid(), []);\n    const passwordId = useMemo(() => nanoid(), []);\n    \n    return (\n        <Form onSubmit={handleSubmit}>\n            <FormLabel htmlFor={nameId}>Ім'я:</FormLabel>\n                <FormInput id={nameId} value={name} name=\"name\" type=\"text\" onChange={handleChange} placeholder=\"Введіть ім'я\" required/>\n            <FormLabel htmlFor={emailId}>Електронна адреса:</FormLabel>\n                <FormInput id={emailId} value={email} name=\"email\" type=\"email\" onChange={handleChange} placeholder=\"Введіть електронну адресу\" required />\n            <FormLabel htmlFor={passwordId}>Пароль:</FormLabel>\n                <FormInput id={passwordId} value={password} name=\"password\" type=\"password\" onChange={handleChange} placeholder=\"Введіть пароль\" required />\n            <SubmitBtn>Зареєструватись</SubmitBtn>\n        </Form>\n    )\n}","import { RegisterForm } from \"components/RegisterForm/RegisterForm\";\nimport { useDispatch } from \"react-redux\";\nimport { signup } from \"redux/auth/authOperation\";\nimport { Box } from \"utils/Box\";\n\nconst RegisterPage = () => {\n    const dispatch = useDispatch()\n\n    const handleSubmit = (user) => {\n        const action = signup(user)\n        dispatch(action)\n    }\n\n    return (\n        <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n            <h1>Зареєструйтесь:</h1>\n            <RegisterForm onSubmit={handleSubmit} />\n        </Box>\n    )\n}\n\nexport default RegisterPage;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["initialState","onSubmit","useState","state","setState","handleChange","e","target","value","type","name","checked","newValue","prevState","handleSubmit","preventDefault","Form","styled","p","theme","space","borders","bold","colors","primary","grey","radii","normal","FormLabel","FormInput","SubmitBtn","white","email","password","RegisterForm","useForm","nameId","useMemo","nanoid","emailId","passwordId","htmlFor","id","onChange","placeholder","required","dispatch","useDispatch","Box","display","alignItems","flexDirection","user","action","signup","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}