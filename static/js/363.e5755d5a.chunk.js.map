{"version":3,"file":"static/js/363.e5755d5a.chunk.js","mappings":"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","sources":["hooks/useForm.js","redux/filter/filterSelectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","redux/contacts/contactsSelectors.js","components/Contacts/ContactAddForm/ContactsAddForm.styled.js","components/Contacts/ContactAddForm/ContactsAddForm.jsx","components/Contacts/ContactsList/ContactsList.styled.js","components/Contacts/ContactsList/ContactsListItem.jsx","components/Contacts/ContactsList/ContactsList.jsx","components/Contacts/Contacts.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = e => {\n    const { value, type, name, checked } = e.target;\n    const newValue = type === 'checkbox' ? checked : value;\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","export const selectFilter = ({ filter }) => filter.value;\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  padding: ${p => p.theme.space[3]}px;\n  outline: none;\n  border: none;\n  border-bottom: ${p => p.theme.borders.bold} ${p => p.theme.colors.secondary};\n`;\n","import { useDispatch, useSelector } from \"react-redux\"\nimport { selectFilter } from \"redux/filter/filterSelectors\"\nimport { setFilter } from \"redux/filter/filterSlice\"\nimport { FilterInput } from \"./Filter.styled\"\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n        const handleChange = (e) => {\n        const { value } = e.target;\n        const action = setFilter(value);\n        dispatch(action)\n}\n\n    return <FilterInput type=\"text\" value={filter} onChange={handleChange} placeholder=\"Filter?\" />\n}","export const selectContacts = ({ contacts }) => contacts.items;\n\nexport const selectIsLoading = ({ contacts }) => contacts.loading;\n\nexport const selectContactsError = ({ contacts }) => contacts.error;\n\nexport const selectFilteredContacts = ({ filter, contacts }) => {\n  if (!filter.value) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.value.toLowerCase();\n  const filteredContacts = contacts.items.filter(item =>\n    item.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return filteredContacts;\n};\n","import styled from 'styled-components';\nimport { BsPlusSquare } from 'react-icons/bs';\nimport { MdClose } from 'react-icons/md';\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  width: 500px;\n  padding: ${p => p.theme.space[5]}px;\n  flex-direction: column;\n  box-shadow: 0px 10px 17px -3px ${p => p.theme.colors.grey};\n  border-radius: ${p => p.theme.radii.normal};\n  margin-bottom: ${p => p.theme.space[5]}px;\n  background-color: ${p => p.theme.colors.primary};\n`;\n\nexport const OpenFormBtn = styled.button`\n  display: flex;\n  align-items: center;\n  font-family: inherit;\n  font-size: ${p => p.theme.fontSizes.link};\n  color: ${p => p.theme.colors.primary};\n  outline: none;\n  border: none;\n  cursor: pointer;\n  background-color: transparent;\n  padding: 0;\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const OpenFormIcon = styled(BsPlusSquare)`\n  fill: ${p => p.theme.colors.primary};\n  margin-right: ${p => p.theme.space[3]}px;\n`;\n\nexport const FormLabel = styled.label`\n  margin-bottom: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const FormInput = styled.input`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[4]}px;\n  outline: none;\n  border: ${p => p.theme.borders.bold} ${p => p.theme.colors.primary};\n  border-radius: ${p => p.theme.radii.normal};\n  transition: box-shadow 250ms linear;\n\n  &:focus {\n    box-shadow: 0px 10px 10px -5px ${p => p.theme.colors.black};\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  width: fit-content;\n  font-family: inherit;\n  outline: none;\n  margin: 0 auto;\n  font-size: inherit;\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[5]}px;\n  color: ${p => p.theme.colors.white};\n  border: ${p => p.theme.borders.bold} ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.primary};\n  border-radius: ${p => p.theme.radii.normal};\n  transition: 250ms linear;\n\n  &:hover,\n  :focus {\n    color: ${p => p.theme.colors.primary};\n    box-shadow: inset 6.5em 0 0 0 ${p => p.theme.colors.white};\n  }\n\n  &:active {\n    color: ${p => p.theme.colors.primary};\n    background-color: ${p => p.theme.colors.white};\n    box-shadow: 0px 10px 10px -5px ${p => p.theme.colors.black};\n  }\n`;\n\nexport const FormCloseBtn = styled.button`\n  outline: none;\n  border: none;\n  background-color: transparent;\n  padding: 0;\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  cursor: pointer;\n`;\n\nexport const FormCloseIcon = styled(MdClose)`\n  fill: ${p => p.theme.colors.white};\n  transition: 250ms linear;\n\n  &:hover,\n  :focus {\n    fill: ${p => p.theme.colors.red};\n  }\n`;\n","import useForm from \"hooks/useForm\";\nimport { nanoid } from \"nanoid\";\nimport { useMemo } from \"react\";\nimport { Box } from \"utils/Box\";\nimport PropTypes from 'prop-types'\nimport { Form, FormInput, FormLabel, SubmitBtn, OpenFormBtn, OpenFormIcon, FormCloseBtn, FormCloseIcon } from \"./ContactsAddForm.styled\";\n\nconst initialState = {\n    name: '',\n    number: '',\n    isFormOpen: false\n}\n\nexport const ContactsAddForm = ({ onSubmit }) => {\n    const { state, setState, handleSubmit, handleChange } = useForm({initialState, onSubmit})\n    const { name, number, isFormOpen } = state;\n\n    const nameId = useMemo(() => nanoid(), [])\n    const numberId = useMemo(() => nanoid(), [])\n\n    const formOpenToggle = () => {\n        setState(prevState => {\n            return {...prevState, isFormOpen: !prevState.isFormOpen}\n        })\n    }\n\n    return (\n        <Box>\n            {!isFormOpen && <OpenFormBtn onClick={formOpenToggle}><OpenFormIcon size=\"30\" />Add contact</OpenFormBtn>}\n            {isFormOpen &&\n                <Form onSubmit={handleSubmit}>\n                    <FormCloseBtn onClick={formOpenToggle}><FormCloseIcon size=\"25\"/></FormCloseBtn>\n                    <FormLabel htmlFor={nameId}>Name:</FormLabel>\n                        <FormInput id={nameId} name=\"name\" type=\"text\" value={name} onChange={handleChange} placeholder=\"Enter a name\" required />\n                    <FormLabel htmlFor={numberId}>Number:</FormLabel>\n                        <FormInput id={numberId} name=\"number\" type=\"text\" value={number} onChange={handleChange} placeholder=\"Enter a number\" required />\n                    <SubmitBtn>Add</SubmitBtn>\n                </Form>}\n        </Box>\n    )\n}\n\nContactsAddForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import styled from 'styled-components';\nimport { RiDeleteBin2Line } from 'react-icons/ri';\n\nexport const List = styled.ul`\n  padding: ${p => p.theme.space[5]}px;\n  width: 100%;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: ${p => p.theme.borders.normal} ${p => p.theme.colors.secondary};\n\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const ListItemName = styled.span``;\n\nexport const ListItemNumber = styled.span``;\n\nexport const DeleteBtn = styled.button`\n  width: fit-content;\n  padding: 0;\n  background-color: transparent;\n  outline: none;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const DeleteIcon = styled(RiDeleteBin2Line)`\n  transition: 250ms linear;\n\n  &:hover,\n  :focus {\n    fill: ${p => p.theme.colors.red};\n  }\n`;\n","import PropTypes from 'prop-types'\nimport { ListItem, DeleteBtn, ListItemName, ListItemNumber, DeleteIcon } from \"./ContactsList.styled\";\n\nexport const ContactsListItem = ({ contact, onDelete }) => {\n    return (\n        <ListItem>\n            <ListItemName>{contact.name}</ListItemName>\n            <ListItemNumber>{contact.number}</ListItemNumber>\n            <DeleteBtn onClick={() => onDelete(contact.id)}><DeleteIcon size=\"20\"/></DeleteBtn>\n        </ListItem>\n    )\n}\n\nContactsListItem.propTypes = {\n    contact: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }).isRequired,\n    onDelete: PropTypes.func.isRequired\n}","import PropTypes from 'prop-types'\nimport { List } from \"./ContactsList.styled\";\nimport { ContactsListItem } from \"./ContactsListItem\";\n\nexport const ContactsList = ({ contacts, onDelete }) => {\n    return (\n        <List>\n            {contacts.map(contact => <ContactsListItem key={contact.id} contact={contact} onDelete={onDelete} />)}\n        </List>\n    )\n}\n\nContactsList.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onDelete: PropTypes.func.isRequired\n}","import { Filter } from \"components/Filter/Filter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilteredContacts, selectIsLoading } from \"redux/contacts/contactsSelectors\";\nimport { addContact, deleteContact } from \"redux/contacts/contactsOperations\";\nimport { Box } from \"utils/Box\";\nimport { ContactsAddForm } from \"./ContactAddForm/ContactsAddForm\";\nimport { ContactsList } from \"./ContactsList/ContactsList\";\nimport { notifyWarning, notifySuccess, notifyDeletedInfo } from \"utils/notify\";\nimport { ThreeCirclesLoader } from \"components/Loaders/ThreeCirclesLoader\";\n\nexport const Contacts = () => {\n    const contacts = useSelector(selectFilteredContacts)\n    const filteredContacts = useSelector(selectFilteredContacts);\n    const isLoadingContacts = useSelector(selectIsLoading)\n    const dispatch = useDispatch();\n    \n    const onDelete = (id) => {\n        const action = deleteContact(id);\n        dispatch(action);\n\n        const deletedUser = contacts.find(contact => contact.id === id);\n        notifyDeletedInfo(deletedUser.name)\n    }\n\n    const handleSubmit = (newContact) => {\n        for (const contact of contacts) {\n            if (contact.name === newContact.name) {\n                return notifyWarning(contact.name)\n            }\n        }\n\n        const action = addContact(newContact);\n        dispatch(action)\n        notifySuccess(newContact.name)\n    }\n\n    return (\n        <Box width=\"500px\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            <ContactsAddForm onSubmit={handleSubmit} />\n            <Filter />\n            {isLoadingContacts && <ThreeCirclesLoader />}\n            <ContactsList contacts={filteredContacts} onDelete={onDelete} />\n        </Box>\n    )\n}","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\"\nimport {fetchContacts } from \"redux/contacts/contactsOperations\";\n\nimport { Contacts } from \"components/Contacts/Contacts\";\nimport { Box } from \"utils/Box\";\n\nconst ContactsPage = () => {\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n    const action = fetchContacts();\n    dispatch(action)\n    }, [dispatch])\n    \n    return (\n        <Box display=\"flex\" justifyContent=\"center\">\n            <Contacts />\n        </Box>\n    )\n}\n\nexport default ContactsPage;"],"names":["initialState","onSubmit","useState","state","setState","handleChange","e","target","value","type","name","checked","newValue","prevState","handleSubmit","preventDefault","selectFilter","filter","FilterInput","styled","p","theme","space","borders","bold","colors","secondary","Filter","dispatch","useDispatch","useSelector","onChange","action","setFilter","placeholder","selectIsLoading","contacts","loading","selectFilteredContacts","items","normalizedFilter","toLowerCase","item","includes","Form","grey","radii","normal","primary","OpenFormBtn","fontSizes","link","OpenFormIcon","BsPlusSquare","FormLabel","white","FormInput","black","SubmitBtn","FormCloseBtn","FormCloseIcon","MdClose","red","number","isFormOpen","ContactsAddForm","useForm","nameId","useMemo","nanoid","numberId","formOpenToggle","Box","onClick","size","htmlFor","id","required","List","ListItem","ListItemName","ListItemNumber","DeleteBtn","DeleteIcon","RiDeleteBin2Line","ContactsListItem","contact","onDelete","ContactsList","map","Contacts","filteredContacts","isLoadingContacts","width","display","flexDirection","alignItems","newContact","notifyWarning","addContact","notifySuccess","ThreeCirclesLoader","deleteContact","deletedUser","find","notifyDeletedInfo","useEffect","fetchContacts","justifyContent"],"sourceRoot":""}