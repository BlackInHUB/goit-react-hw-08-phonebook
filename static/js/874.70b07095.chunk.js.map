{"version":3,"file":"static/js/874.70b07095.chunk.js","mappings":"kLAyBA,IAvBgB,SAAC,GAAgC,IAA9BA,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAC/B,GAA0BC,EAAAA,EAAAA,WAAS,UAAKF,IAAxC,eAAOG,EAAP,KAAcC,EAAd,KAmBA,MAAO,CAAED,MAAAA,EAAOC,SAAAA,EAAUC,aAjBL,SAAAC,GACnB,MAAuCA,EAAEC,OAAjCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,QACrBC,EAAoB,aAATH,EAAsBE,EAAUH,EAEjDJ,GAAS,SAAAS,GAAS,yBACbA,GADa,cAEfH,EAAOE,GAFQ,GAInB,EASuCE,aAPnB,SAAAR,GACnBA,EAAES,iBAEFd,GAAS,UAAKE,IACdC,GAAS,UAAKJ,GACf,EAGF,C,+GCvBM,I,oBAAMgB,EAAe,SAAC,GAAD,SAAGC,OAAoBT,KAAvB,E,6BCEfU,EAAcC,EAAAA,GAAAA,MAAH,sB,UCGXC,EAAS,WAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACXL,GAASM,EAAAA,EAAAA,IAAYP,GAQ3B,OAAO,SAACE,EAAD,CAAaT,KAAK,OAAOD,MAAOS,EAAQO,SANtB,SAAClB,GACtB,IAAQE,EAAUF,EAAEC,OAAZC,MACFiB,GAASC,EAAAA,EAAAA,GAAUlB,GACzBa,EAASI,EAChB,EAE0EE,YAAY,wEACtF,ECZYC,EAAyB,SAAC,GAA0B,IAAxBX,EAAuB,EAAvBA,OAAQY,EAAe,EAAfA,SAC/C,IAAKZ,EAAOT,MACV,OAAOqB,EAASC,MAGlB,IAAMC,EAAmBd,EAAOT,MAAMwB,cAKtC,OAJyBH,EAASC,MAAMb,QAAO,SAAAgB,GAAI,OACjDA,EAAKvB,KAAKsB,cAAcE,SAASH,EADgB,GAKpD,E,8BCbYI,EAAOhB,EAAAA,GAAAA,KAAH,qEAKJiB,EAAYjB,EAAAA,GAAAA,MAAH,sBAETkB,EAAYlB,EAAAA,GAAAA,MAAH,sBAETmB,EAAYnB,EAAAA,GAAAA,OAAH,+CCNhBnB,EAAe,CACjBU,KAAM,GACN6B,OAAQ,IAGCC,EAAkB,SAAC,GAAkB,IAAhBvC,EAAe,EAAfA,SAC9B,GAA8CwC,EAAAA,EAAAA,GAAQ,CAACzC,aAAAA,EAAcC,SAAAA,IAA7DE,EAAR,EAAQA,MAAOW,EAAf,EAAeA,aAAcT,EAA7B,EAA6BA,aACrBK,EAAiBP,EAAjBO,KAAM6B,EAAWpC,EAAXoC,OAERG,GAASC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IACjCC,GAAWF,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAN,GAAgB,IAEzC,OACI,UAACT,EAAD,CAAMlC,SAAUa,EAAhB,WACI,SAACsB,EAAD,CAAWU,QAASJ,EAApB,oFACI,SAACL,EAAD,CAAWU,GAAIL,EAAQhC,KAAK,OAAOD,KAAK,OAAOD,MAAOE,EAAMc,SAAUnB,EAAcsB,YAAY,4EAAgBqB,UAAQ,KAC5H,SAACZ,EAAD,CAAWU,QAASD,EAApB,+FACI,SAACR,EAAD,CAAWU,GAAIF,EAAUnC,KAAK,SAASD,KAAK,OAAOD,MAAO+B,EAAQf,SAAUnB,EAAcsB,YAAY,iEAAeqB,UAAQ,KACjI,SAACV,EAAD,gGAGX,ECxBYW,EAAO9B,EAAAA,GAAAA,GAAH,sBAEJ+B,EAAW/B,EAAAA,GAAAA,GAAH,oGAIA,SAAAgC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITC,EAAenC,EAAAA,GAAAA,KAAH,sBAEZoC,EAAiBpC,EAAAA,GAAAA,KAAH,sBAEdqC,EAAYrC,EAAAA,GAAAA,OAAH,gECdTsC,EAAmB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACxC,OACI,UAACT,EAAD,YACI,SAACI,EAAD,UAAeI,EAAQhD,QACvB,SAAC6C,EAAD,UAAiBG,EAAQnB,UACzB,SAACiB,EAAD,CAAWI,QAAS,kBAAMD,EAASD,EAAQX,GAAvB,EAApB,gEAGX,ECPYc,EAAe,SAAC,GAA4B,IAA1BhC,EAAyB,EAAzBA,SAAU8B,EAAe,EAAfA,SACrC,OACI,SAACV,EAAD,UACKpB,EAASiC,KAAI,SAAAJ,GAAO,OAAI,SAACD,EAAD,CAAmCC,QAASA,EAASC,SAAUA,GAAxCD,EAAQX,GAAnC,KAGhC,E,UCAYgB,EAAW,WACpB,IAAMlC,GAAWN,EAAAA,EAAAA,IAAYK,GACvBoC,GAAmBzC,EAAAA,EAAAA,IAAYK,GAC/BP,GAAWC,EAAAA,EAAAA,MAkBjB,OACI,UAAC2C,EAAA,EAAD,YACI,SAACzB,EAAD,CAAiBvC,SAbJ,SAACiE,GAAgB,IAAD,ECjBnBC,EDiBmB,EElB1B,SAAoCC,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAElE,IAAKE,EAAI,CACP,GAAIG,MAAMC,QAAQN,KAAOE,GAAK,EAAAK,EAAA,GAA2BP,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEQ,OAAqB,CAC/GN,IAAIF,EAAIE,GACZ,IAAIO,EAAI,EAEJC,EAAI,WAAc,EAEtB,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKT,EAAEQ,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACNzE,MAAO4D,EAAES,KAEb,EACAvE,EAAG,SAAW4E,GACZ,MAAMA,CACR,EACAC,EAAGL,EAEP,CAEA,MAAM,IAAIM,UAAU,wIACtB,CAEA,IAEIC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLR,EAAG,WACDT,EAAKA,EAAGkB,KAAKpB,EACf,EACAY,EAAG,WACD,IAAIS,EAAOnB,EAAGoB,OAEd,OADAJ,EAAmBG,EAAKR,KACjBQ,CACT,EACAnF,EAAG,SAAWqF,GACZJ,GAAS,EACTF,EAAMM,CACR,EACAR,EAAG,WACD,IACOG,GAAoC,MAAhBhB,EAAW,QAAWA,EAAW,QAG5D,CAFE,QACA,GAAIiB,EAAQ,MAAMF,CACpB,CACF,EAEJ,CFrCyC,CACXxD,GADW,IACjC,2BAAgC,CAAC,IAAtB6B,EAAqB,QAC5B,GAAIA,EAAQhD,OAASwD,EAAWxD,KAC5B,OCpBMyD,EDoBQT,EAAQhD,KCnBpCkF,EAAAA,GAAAA,MAAA,qDAAuBzB,EAAvB,uDAA8C,CAC5C0B,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVhD,MAAO,WDaF,CALgC,+BAOjC,IAAM3B,GAAS4E,EAAAA,EAAAA,IAAWnC,GAC1B7C,EAASI,EACZ,KAKO,SAACL,EAAD,KACA,SAACyC,EAAD,CAAchC,SAAUmC,EAAkBL,SApBjC,SAACZ,GACd,IAAMtB,GAAS6E,EAAAA,EAAAA,IAAcvD,GAC7B1B,EAASI,EACZ,MAoBJ,EGfD,EAfqB,WACjB,IAAMJ,GAAWC,EAAAA,EAAAA,MAOjB,OALAiF,EAAAA,EAAAA,YAAU,WACV,IAAM9E,GAAS+E,EAAAA,EAAAA,MACfnF,EAASI,EACR,GAAE,CAACJ,KAGA,SAAC4C,EAAA,EAAD,WACI,SAACF,EAAD,KAGX,C,wDCnBM,IAkBInB,EAAS,eAAC6D,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAC9D,EAAI+D,GAWvD,OARE/D,IAFF+D,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["hooks/useForm.js","redux/filter/filterSelectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","redux/contacts/contactsSelectors.js","components/Contacts/ContactAddForm/ContactsAddForm.styled.js","components/Contacts/ContactAddForm/ContactsAddForm.jsx","components/Contacts/ContactsList/ContactsList.styled.js","components/Contacts/ContactsList/ContactsListItem.jsx","components/Contacts/ContactsList/ContactsList.jsx","components/Contacts/Contacts.jsx","utils/notify.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","pages/ContactsPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = e => {\n    const { value, type, name, checked } = e.target;\n    const newValue = type === 'checkbox' ? checked : value;\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","export const selectFilter = ({ filter }) => filter.value;\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input``;\n","import { useDispatch, useSelector } from \"react-redux\"\nimport { selectFilter } from \"redux/filter/filterSelectors\"\nimport { setFilter } from \"redux/filter/filterSlice\"\nimport { FilterInput } from \"./Filter.styled\"\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n        const handleChange = (e) => {\n        const { value } = e.target;\n        const action = setFilter(value);\n        dispatch(action)\n}\n\n    return <FilterInput type=\"text\" value={filter} onChange={handleChange} placeholder=\"Кого шукаєте?\" />\n}","export const selectContacts = ({ contacts }) => contacts.items;\n\nexport const selectIsLoading = ({ contacts }) => contacts.loading;\n\nexport const selectFilteredContacts = ({ filter, contacts }) => {\n  if (!filter.value) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.value.toLowerCase();\n  const filteredContacts = contacts.items.filter(item =>\n    item.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return filteredContacts;\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLabel = styled.label``;\n\nexport const FormInput = styled.input``;\n\nexport const SubmitBtn = styled.button`\n  width: fit-content;\n`;\n","import useForm from \"hooks/useForm\";\nimport { nanoid } from \"nanoid\";\nimport { useMemo } from \"react\";\nimport { Form, FormInput, FormLabel, SubmitBtn } from \"./ContactsAddForm.styled\";\n\nconst initialState = {\n    name: '',\n    number: ''\n}\n\nexport const ContactsAddForm = ({ onSubmit }) => {\n    const { state, handleSubmit, handleChange } = useForm({initialState, onSubmit})\n    const { name, number } = state;\n\n    const nameId = useMemo(() => nanoid(), [])\n    const numberId = useMemo(() => nanoid(), [])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <FormLabel htmlFor={nameId}>Ім'я контакту:</FormLabel>\n                <FormInput id={nameId} name=\"name\" type=\"text\" value={name} onChange={handleChange} placeholder=\"Введіть назву\" required />\n            <FormLabel htmlFor={numberId}>Номер телефону:</FormLabel>\n                <FormInput id={numberId} name=\"number\" type=\"text\" value={number} onChange={handleChange} placeholder=\"Введіть ім'я\" required />\n            <SubmitBtn>Додати контакт</SubmitBtn>\n        </Form>\n    )\n}","import styled from 'styled-components';\n\nexport const List = styled.ul``;\n\nexport const ListItem = styled.li`\n  display: flex;\n\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const ListItemName = styled.span``;\n\nexport const ListItemNumber = styled.span``;\n\nexport const DeleteBtn = styled.button`\n  width: fit-content;\n  border: none;\n`;\n","import { ListItem, DeleteBtn, ListItemName, ListItemNumber } from \"./ContactsList.styled\";\n\nexport const ContactsListItem = ({ contact, onDelete }) => {\n    return (\n        <ListItem>\n            <ListItemName>{contact.name}</ListItemName>\n            <ListItemNumber>{contact.number}</ListItemNumber>\n            <DeleteBtn onClick={() => onDelete(contact.id)}>Видалити</DeleteBtn>\n        </ListItem>\n    )\n}","import { List } from \"./ContactsList.styled\";\nimport { ContactsListItem } from \"./ContactsListItem\";\n\nexport const ContactsList = ({ contacts, onDelete }) => {\n    return (\n        <List>\n            {contacts.map(contact => <ContactsListItem key={contact.id} contact={contact} onDelete={onDelete} />)}\n        </List>\n    )\n}","import { Filter } from \"components/Filter/Filter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilteredContacts } from \"redux/contacts/contactsSelectors\";\nimport { addContact, deleteContact } from \"redux/contacts/contactsOperations\";\nimport { Box } from \"utils/Box\";\nimport { ContactsAddForm } from \"./ContactAddForm/ContactsAddForm\";\nimport { ContactsList } from \"./ContactsList/ContactsList\";\nimport { notify } from \"utils/notify\";\n\nexport const Contacts = () => {\n    const contacts = useSelector(selectFilteredContacts)\n    const filteredContacts = useSelector(selectFilteredContacts);\n    const dispatch = useDispatch();\n    \n    const onDelete = (id) => {\n        const action = deleteContact(id);\n        dispatch(action);\n    }\n\n    const handleSubmit = (newContact) => {\n        for (const contact of contacts) {\n            if (contact.name === newContact.name) {\n                return notify(contact.name)\n            }\n        }\n\n        const action = addContact(newContact);\n        dispatch(action)\n    }\n\n    return (\n        <Box>\n            <ContactsAddForm onSubmit={handleSubmit} />\n            <Filter />\n            <ContactsList contacts={filteredContacts} onDelete={onDelete} />\n        </Box>\n    )\n}","import { toast } from 'react-toastify';\n\nexport const notify = username =>\n  toast.error(`Контакт ${username} вже існує!`, {\n    position: 'top-center',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'colored',\n  });\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\"\nimport {fetchContacts } from \"redux/contacts/contactsOperations\";\n\nimport { Contacts } from \"components/Contacts/Contacts\";\nimport { Box } from \"utils/Box\";\n\nconst ContactsPage = () => {\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n    const action = fetchContacts();\n    dispatch(action)\n    }, [dispatch])\n    \n    return (\n        <Box>\n            <Contacts />\n        </Box>\n    )\n}\n\nexport default ContactsPage;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["initialState","onSubmit","useState","state","setState","handleChange","e","target","value","type","name","checked","newValue","prevState","handleSubmit","preventDefault","selectFilter","filter","FilterInput","styled","Filter","dispatch","useDispatch","useSelector","onChange","action","setFilter","placeholder","selectFilteredContacts","contacts","items","normalizedFilter","toLowerCase","item","includes","Form","FormLabel","FormInput","SubmitBtn","number","ContactsAddForm","useForm","nameId","useMemo","nanoid","numberId","htmlFor","id","required","List","ListItem","p","theme","space","ListItemName","ListItemNumber","DeleteBtn","ContactsListItem","contact","onDelete","onClick","ContactsList","map","Contacts","filteredContacts","Box","newContact","username","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","addContact","deleteContact","useEffect","fetchContacts","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}